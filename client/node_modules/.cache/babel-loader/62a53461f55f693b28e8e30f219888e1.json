{"ast":null,"code":"var _jsxFileName = \"/Users/odorizzialex/Desktop/Projects/coding/web/Chat_Room_Projects/thechatroom/src/components/Chat/MainChat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport sendIconGrey from \"../../assets/send_light-grey.svg\";\nimport saveIconGrey from \"../../assets/save_light-grey.svg\";\nimport downIconGrey from \"../../assets/chevron-down_light-grey.svg\";\nimport SingleMessage from './SingleMessage';\nimport io from 'socket.io-client';\n/**\n * TODO\n * scrollable !check!\n * stack messages from bottom up\n * user created/ connected alert\n * scroll down button if scrolled elsewhere\n * stay scrolled down \n * make message input box multiline\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainChat = () => {\n  _s();\n\n  const [state, setState] = useState({\n    name: \"\",\n    message: \"\"\n  });\n  const [headerName, setHeaderName] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [isUserNamePopupVisible, setIsUsernamePopupVisible] = useState(true);\n  const [userHasScrolled, setUserHasScrolled] = useState(false); //false\n\n  const [scrollState, setScrollState] = useState(0);\n  const [isNewMessageReceived, setIsNewMessageReceived] = useState(false);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:5000\");\n    socketRef.current.on('message', ({\n      name,\n      message\n    }) => {\n      // console.log(\"state: \",state);\n      // console.log(\"chat: \",chat);\n      setChat([...chat, {\n        name,\n        message\n      }]);\n      let messageListEl = document.getElementById(\"messagesWrapper\");\n\n      if (checkUserHasScrolled(messageListEl)) {\n        updateScroll(messageListEl);\n      }\n    });\n    socketRef.current.on('userDisconnected', () => {\n      console.log(\"user disconnected\");\n    });\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n\n  const checkUserHasScrolled = msgList => {\n    let scrollDistance = msgList.scrollHeight - (msgList.scrollTop + msgList.offsetHeight);\n    console.log(scrollDistance);\n    return false;\n  };\n\n  const updateScroll = msgList => {\n    // console.log(\"scrollTop: \"+messageListEl.scrollTop);\n    // console.log(\"offsetHeight: \"+messageListEl.offsetHeight);\n    // console.log(\"scrollHeight: \"+messageListEl.scrollHeight);\n    // console.log(\"sum of scrolltop and offsetHeight: \"+(messageListEl.scrollTop+messageListEl.offsetHeight));\n\n    /**\n     * .scrollTop is the upper border of the div in which can be scrolled\n     * .scrollHeight is the total height of the scrollable div.\n     * .offsetHeight is the height of the visible portion of the scrollable div.\n     * ---> when the sum of scrollTop and offsetHeight equals scrollHeight, the user\n     * has not scrolled up. if it is not equal, user has scrolled, and the scroll down \n     * button has to be visible!\n     */\n    // scrolls to bottom\n    msgList.scrollTop = msgList.scrollHeight;\n  };\n\n  const onUsernameSubmit = event => {\n    event.preventDefault();\n\n    if (state.name !== \"\") {\n      setState({ ...state,\n        [event.target.name]: event.target.value\n      });\n      setIsUsernamePopupVisible(false);\n      setHeaderName(state.name);\n    }\n  };\n\n  const onMessageSubmit = event => {\n    const {\n      name,\n      message\n    } = state;\n    event.preventDefault();\n\n    if (state.message !== \"\") {\n      socketRef.current.emit('message', {\n        name,\n        message\n      });\n      setState({\n        message: \"\",\n        name\n      });\n    }\n  };\n\n  const onTextInputChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledArea, {\n    children: [isUserNamePopupVisible && /*#__PURE__*/_jsxDEV(Overlay, {\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(PopupDescription, {\n          children: \"Insert your Username!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n          onSubmit: onUsernameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n            name: \"name\",\n            onChange: onTextInputChange,\n            value: state.name,\n            placeholder: \"Username...\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledFormSubmitButton, {\n            text: state.name,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveIconGrey,\n              alt: \"save icon from feathericons.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          children: headerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessagesOutterWrapper, {\n        id: \"messagesWrapper\",\n        children: /*#__PURE__*/_jsxDEV(Messages, {\n          children: chat.map(({\n            name,\n            message\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(SingleMessage, {\n              currentUsername: state.name,\n              name: name,\n              message: message\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BottomAreaWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ScrollButtonWrapper, {\n          children: [isNewMessageReceived && userHasScrolled && /*#__PURE__*/_jsxDEV(NewMessageIndicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), userHasScrolled && /*#__PURE__*/_jsxDEV(StyledScrollButton, {\n            onClick: () => updateScroll(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: downIconGrey,\n              alt: \"chevron down from feathericons.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n          onSubmit: onMessageSubmit,\n          children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n            name: \"message\",\n            onChange: onTextInputChange,\n            value: state.message,\n            placeholder: \"Message...\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledFormSubmitButton, {\n            text: state.message,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendIconGrey,\n              alt: \"send icon from feathericons.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainChat, \"1nynTgIPnSwN/P67nWDyO4oVD08=\");\n\n_c = MainChat;\nexport default MainChat;\nconst StyledArea = styled.div`\nposition: fixed;\npadding: 20px;\nbackground: var(--app-background);\nheight: 100%;\nwidth:100%;\n`;\n_c2 = StyledArea;\nconst Overlay = styled.div`\nbackground: var(--trans-black);\nposition: fixed;\nwidth: 100%;\nheight: 100%;\n// filter: blur (8px);\n// -webkit-filter: blur (8px);\nbackdrop-filter: blur(5px);\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nz-index: 2;\n`;\n_c3 = Overlay;\nconst Popup = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground: var(--white);\nborder-radius: 10px;\n`;\n_c4 = Popup;\nconst PopupDescription = styled.div`\ntext-align:center;\npadding-top: 10px;\npadding-bottom: 10px;\n\n`;\n_c5 = PopupDescription;\nconst ChatArea = styled.div`\nposition: absolute;\ntop:50%;\nleft:50%;\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: column;\nbackground: var(--white);\nborder-radius: 10px;\n// min-height: 500px;\n// max-height: 98%;\n// max-width: 98%;\nwidth: 98%;\nheight: 98%;\n`;\n_c6 = ChatArea;\nconst HeaderWrapper = styled.div`\npadding: 10px;\nborder-bottom: 1px solid var(--light-grey);\n`;\n_c7 = HeaderWrapper;\nconst Header = styled.div`\ndisplay: flex;\nwidth: 100%;\npadding: 10px;\nmargin-top: auto;\nbackground: var(--light-grey);\nborder-radius: 10px;\npadding: 15px;\ncolor: var(--petrol);\nfont-weight: 700;\n`;\n_c8 = Header;\nconst MessagesOutterWrapper = styled.div`\noverflow-y: auto;\npadding: 10px 10px 0px 10px;\nheight: 100%;\nwidth: 100%;\n`;\n_c9 = MessagesOutterWrapper;\nconst Messages = styled.div`\n`;\n_c10 = Messages;\nconst BottomAreaWrapper = styled.div`\n`;\n_c11 = BottomAreaWrapper;\nconst ScrollButtonWrapper = styled.div`\nposition: absolute;\nmargin-left: 10px;\nmargin-top: -40px;\nz-index: 2;\n`;\n_c12 = ScrollButtonWrapper;\nconst NewMessageIndicator = styled.div`\nposition: absolute;\npointer-events: none;\nwidth: 13px;\nheight: 13px;\nmargin-left: 22px;\nmargin-top: -3px;\nborder-radius: 6px;\nbackground: var(--warning);\n`;\n_c13 = NewMessageIndicator;\nconst StyledScrollButton = styled.div`\ndisplay: inline-block;\nborder: 0;\npadding: 4px 4px 0px 4px;\nbackground: var(--petrol-light);\nborder-radius: 10px;\ncursor: pointer;\n\n&:hover {\n    background: var(--petrol);\n}\n`;\n_c14 = StyledScrollButton;\nconst InputForm = styled.form`\ndisplay: flex;\nwidth: 100%;\npadding: 10px;\nmargin-top: auto;\nborder-top: 1px solid var(--light-grey);\n`;\n_c15 = InputForm;\nconst StyledInput = styled.input`\nborder-radius: 10px;\nborder: 0;\nbackground: var(--light-grey);\npadding: 20px;\nwidth: 100%;\n\n&:focus {\n    outline: none;\n}\n`;\n_c16 = StyledInput;\nconst StyledFormSubmitButton = styled.button`\nborder: 0;\npadding: 4px 16px 0px 15px;\nmargin-left: 5px;\nbackground: ${props => props.text !== \"\" ? \"var(--petrol-light)\" : \"var(--dark-grey)\"};\nborder-radius: 10px;\ncursor: pointer;\ncursor: ${props => props.text !== \"\" ? \"pointer\" : \"default\"};\npointer-events: ${props => props.text !== \"\" ? \"\" : \"none\"};   \n\n&:hover {\n    background: ${props => props.text !== \"\" ? \"var(--petrol)\" : \"\"};\n}\n`;\n_c17 = StyledFormSubmitButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n\n$RefreshReg$(_c, \"MainChat\");\n$RefreshReg$(_c2, \"StyledArea\");\n$RefreshReg$(_c3, \"Overlay\");\n$RefreshReg$(_c4, \"Popup\");\n$RefreshReg$(_c5, \"PopupDescription\");\n$RefreshReg$(_c6, \"ChatArea\");\n$RefreshReg$(_c7, \"HeaderWrapper\");\n$RefreshReg$(_c8, \"Header\");\n$RefreshReg$(_c9, \"MessagesOutterWrapper\");\n$RefreshReg$(_c10, \"Messages\");\n$RefreshReg$(_c11, \"BottomAreaWrapper\");\n$RefreshReg$(_c12, \"ScrollButtonWrapper\");\n$RefreshReg$(_c13, \"NewMessageIndicator\");\n$RefreshReg$(_c14, \"StyledScrollButton\");\n$RefreshReg$(_c15, \"InputForm\");\n$RefreshReg$(_c16, \"StyledInput\");\n$RefreshReg$(_c17, \"StyledFormSubmitButton\");","map":{"version":3,"sources":["/Users/odorizzialex/Desktop/Projects/coding/web/Chat_Room_Projects/thechatroom/src/components/Chat/MainChat.jsx"],"names":["React","useState","useEffect","useRef","styled","SingleMessage","io","MainChat","state","setState","name","message","headerName","setHeaderName","chat","setChat","isUserNamePopupVisible","setIsUsernamePopupVisible","userHasScrolled","setUserHasScrolled","scrollState","setScrollState","isNewMessageReceived","setIsNewMessageReceived","socketRef","current","connect","on","messageListEl","document","getElementById","checkUserHasScrolled","updateScroll","console","log","disconnect","msgList","scrollDistance","scrollHeight","scrollTop","offsetHeight","onUsernameSubmit","event","preventDefault","target","value","onMessageSubmit","emit","onTextInputChange","saveIconGrey","map","index","downIconGrey","sendIconGrey","StyledArea","div","Overlay","Popup","PopupDescription","ChatArea","HeaderWrapper","Header","MessagesOutterWrapper","Messages","BottomAreaWrapper","ScrollButtonWrapper","NewMessageIndicator","StyledScrollButton","InputForm","form","StyledInput","input","StyledFormSubmitButton","button","props","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport sendIconGrey from '../../assets/send_light-grey.svg'\nimport saveIconGrey from '../../assets/save_light-grey.svg'\nimport downIconGrey from '../../assets/chevron-down_light-grey.svg'\nimport SingleMessage from './SingleMessage'\nimport io from 'socket.io-client'\n/**\n * TODO\n * scrollable !check!\n * stack messages from bottom up\n * user created/ connected alert\n * scroll down button if scrolled elsewhere\n * stay scrolled down \n * make message input box multiline\n */\n\nconst MainChat = () => {\n    const [state, setState] = useState({name: \"\", message: \"\" });\n    const [headerName, setHeaderName] = useState(\"\");\n    const [chat, setChat] = useState([]);\n    const [isUserNamePopupVisible, setIsUsernamePopupVisible] = useState(true);\n    const [userHasScrolled, setUserHasScrolled] = useState(false); //false\n    const [scrollState, setScrollState] = useState(0);\n    const [isNewMessageReceived, setIsNewMessageReceived] = useState(false);\n\n    const socketRef = useRef();\n\n\n    useEffect(()=> {\n        socketRef.current = io.connect(\"http://localhost:5000\")\n        socketRef.current.on('message', ({ name, message }) => {\n            // console.log(\"state: \",state);\n            // console.log(\"chat: \",chat);\n            setChat([ ...chat, { name, message } ])\n            let messageListEl = document.getElementById(\"messagesWrapper\");\n            if(checkUserHasScrolled(messageListEl)){\n                updateScroll(messageListEl);\n            }\n        })\n        socketRef.current.on('userDisconnected', () => {\n            console.log(\"user disconnected\");\n        })\n        return () => socketRef.current.disconnect()\n    },\n    [ chat ])\n\n    const checkUserHasScrolled = (msgList) => {\n        let scrollDistance = msgList.scrollHeight - (msgList.scrollTop+msgList.offsetHeight);\n        console.log(scrollDistance);\n        \n        return false;\n    }\n\n    const updateScroll = (msgList) => {\n        \n        // console.log(\"scrollTop: \"+messageListEl.scrollTop);\n        // console.log(\"offsetHeight: \"+messageListEl.offsetHeight);\n        // console.log(\"scrollHeight: \"+messageListEl.scrollHeight);\n        // console.log(\"sum of scrolltop and offsetHeight: \"+(messageListEl.scrollTop+messageListEl.offsetHeight));\n        /**\n         * .scrollTop is the upper border of the div in which can be scrolled\n         * .scrollHeight is the total height of the scrollable div.\n         * .offsetHeight is the height of the visible portion of the scrollable div.\n         * ---> when the sum of scrollTop and offsetHeight equals scrollHeight, the user\n         * has not scrolled up. if it is not equal, user has scrolled, and the scroll down \n         * button has to be visible!\n         */\n        // scrolls to bottom\n        msgList.scrollTop = msgList.scrollHeight;    \n    }\n\n    const onUsernameSubmit = (event) => {\n        event.preventDefault();\n        if(state.name !== \"\"){\n            setState({...state, [event.target.name]: event.target.value});\n            setIsUsernamePopupVisible(false);\n            setHeaderName(state.name);\n        }\n    }\n\n    const onMessageSubmit = (event) => {\n        const { name, message } = state;\n        event.preventDefault();\n        if(state.message !== \"\"){\n            socketRef.current.emit('message', {name, message});\n            setState({message: \"\", name });\n        }\n    }\n\n    const onTextInputChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.value });\n    }\n\n    return (\n        <StyledArea>\n            {isUserNamePopupVisible && <Overlay>\n                <Popup>\n                    <PopupDescription>\n                        Insert your Username!\n                    </PopupDescription>\n                    <InputForm onSubmit={onUsernameSubmit}>\n                        <StyledInput\n                            name=\"name\"\n                            onChange={onTextInputChange}\n                            value={state.name}\n                            placeholder=\"Username...\"\n                            autoComplete=\"off\"\n                        />\n                        <StyledFormSubmitButton text={state.name}>\n                            <img src={saveIconGrey} alt=\"save icon from feathericons.com\" />\n                        </StyledFormSubmitButton>\n                    </InputForm>\n                </Popup>\n            </Overlay>}\n            <ChatArea>\n                <HeaderWrapper>\n                    <Header>\n                        {headerName}\n                    </Header>\n                </HeaderWrapper>\n                <MessagesOutterWrapper id=\"messagesWrapper\">\n                    <Messages>\n                        {chat.map(({name, message}, index) => {\n                            return(\n                                <SingleMessage \n                                key={index}\n                                currentUsername={state.name}\n                                name={name}\n                                message={message}\n                                />\n                                );\n                            })}\n                    </Messages>\n                </MessagesOutterWrapper>\n                <BottomAreaWrapper>\n\n                    <ScrollButtonWrapper>\n                        {isNewMessageReceived && userHasScrolled && \n                            <NewMessageIndicator/>}\n                        {userHasScrolled && \n                            <StyledScrollButton onClick={() => updateScroll()}>\n                                <img src={downIconGrey} alt=\"chevron down from feathericons.com\" />\n                            </StyledScrollButton>}\n                    </ScrollButtonWrapper>\n\n                    <InputForm onSubmit={onMessageSubmit}>\n                            <StyledInput\n                                name=\"message\"\n                                onChange={onTextInputChange}\n                                value={state.message}\n                                placeholder=\"Message...\"\n                                autoComplete=\"off\"\n                                />\n                            <StyledFormSubmitButton text={state.message}>\n                                <img src={sendIconGrey} alt=\"send icon from feathericons.com\" />\n                            </StyledFormSubmitButton>\n                    </InputForm>\n                </BottomAreaWrapper>\n            </ChatArea>\n        </StyledArea>\n    );\n}\n\nexport default MainChat;\n\nconst StyledArea = styled.div`\nposition: fixed;\npadding: 20px;\nbackground: var(--app-background);\nheight: 100%;\nwidth:100%;\n`;\n\nconst Overlay = styled.div`\nbackground: var(--trans-black);\nposition: fixed;\nwidth: 100%;\nheight: 100%;\n// filter: blur (8px);\n// -webkit-filter: blur (8px);\nbackdrop-filter: blur(5px);\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nz-index: 2;\n`\n\nconst Popup = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground: var(--white);\nborder-radius: 10px;\n`\n\nconst PopupDescription = styled.div`\ntext-align:center;\npadding-top: 10px;\npadding-bottom: 10px;\n\n`\nconst ChatArea = styled.div`\nposition: absolute;\ntop:50%;\nleft:50%;\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: column;\nbackground: var(--white);\nborder-radius: 10px;\n// min-height: 500px;\n// max-height: 98%;\n// max-width: 98%;\nwidth: 98%;\nheight: 98%;\n`;\n\nconst HeaderWrapper = styled.div`\npadding: 10px;\nborder-bottom: 1px solid var(--light-grey);\n`\n\nconst Header = styled.div`\ndisplay: flex;\nwidth: 100%;\npadding: 10px;\nmargin-top: auto;\nbackground: var(--light-grey);\nborder-radius: 10px;\npadding: 15px;\ncolor: var(--petrol);\nfont-weight: 700;\n`\n\nconst MessagesOutterWrapper = styled.div`\noverflow-y: auto;\npadding: 10px 10px 0px 10px;\nheight: 100%;\nwidth: 100%;\n`\n\nconst Messages = styled.div`\n`\n\nconst BottomAreaWrapper = styled.div`\n`\n\nconst ScrollButtonWrapper = styled.div`\nposition: absolute;\nmargin-left: 10px;\nmargin-top: -40px;\nz-index: 2;\n`\n\nconst NewMessageIndicator = styled.div`\nposition: absolute;\npointer-events: none;\nwidth: 13px;\nheight: 13px;\nmargin-left: 22px;\nmargin-top: -3px;\nborder-radius: 6px;\nbackground: var(--warning);\n`\n\nconst StyledScrollButton = styled.div`\ndisplay: inline-block;\nborder: 0;\npadding: 4px 4px 0px 4px;\nbackground: var(--petrol-light);\nborder-radius: 10px;\ncursor: pointer;\n\n&:hover {\n    background: var(--petrol);\n}\n`\n\nconst InputForm = styled.form`\ndisplay: flex;\nwidth: 100%;\npadding: 10px;\nmargin-top: auto;\nborder-top: 1px solid var(--light-grey);\n`\n\nconst StyledInput = styled.input`\nborder-radius: 10px;\nborder: 0;\nbackground: var(--light-grey);\npadding: 20px;\nwidth: 100%;\n\n&:focus {\n    outline: none;\n}\n`\n\nconst StyledFormSubmitButton = styled.button`\nborder: 0;\npadding: 4px 16px 0px 15px;\nmargin-left: 5px;\nbackground: ${(props) => props.text !== \"\" ? \"var(--petrol-light)\" : \"var(--dark-grey)\"};\nborder-radius: 10px;\ncursor: pointer;\ncursor: ${(props) => props.text !== \"\" ? \"pointer\" : \"default\"};\npointer-events: ${(props) => props.text !== \"\" ? \"\" : \"none\"};   \n\n&:hover {\n    background: ${(props) => props.text !== \"\" ? \"var(--petrol)\" : \"\"};\n}\n`\n"]},"metadata":{},"sourceType":"module"}