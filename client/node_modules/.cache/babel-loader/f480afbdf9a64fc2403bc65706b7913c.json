{"ast":null,"code":"var _jsxFileName = \"/Users/odorizzialex/Desktop/Projects/coding/web/Chat_Room_Projects/thechatroom/src/components/Chat/SingleMessage.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleMessage = ({\n  currentUsername,\n  name,\n  message,\n  timestamp\n}) => {\n  const formatDate = () => {\n    let tmstmp = timestamp.split(',');\n    let date = tmstmp[0];\n    let time = tmstmp[1].split(':'); // console.log(isToday(date));\n\n    date = isToday(date);\n    let newTimestamp = date + \" \" + time[0] + ':' + time[1];\n    return newTimestamp;\n  };\n\n  const isToday = date => {\n    const today = new Date();\n    let dateList = date.split('/');\n    let yesterday = new Date(new Date().valueOf() - 1000 * 60 * 60 * 24).toLocaleString().split(',')[0];\n    console.log(yesterday.split(',')[0]);\n    console.log(date === yesterday);\n    console.log(parseInt(dateList[0]) === today.getDate() && parseInt(dateList[1]) === today.getMonth() + 1 && parseInt(dateList[2]) === today.getFullYear());\n    if (parseInt(dateList[0]) === today.getDate() && parseInt(dateList[1]) === today.getMonth() + 1 && parseInt(dateList[2]) === today.getFullYear()) return \"today\"; // regular yesterday\n    else if ( //(parseInt(dateList[0]) === today.getDate()+1 && parseInt(dateList[1]) === (today.getMonth()+1) && parseInt(dateList[2]) === today.getFullYear())\n      // yesterday on month break\n      // || (parseInt(dateList[0]) === 31 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear()) \n      // || (parseInt(dateList[0]) === 30 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear()) \n      // || (parseInt(dateList[0]) === 29 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear()) \n      // || (parseInt(dateList[0]) === 28 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear())\n      date === yesterday // yesterday on new year\n      || parseInt(dateList[0]) === 31 && today.getDate() === 1 && parseInt(dateList[1]) === 12 && today.getMonth() + 1 === 1 && parseInt(dateList[2]) === today.getFullYear() - 1) return \"yesterday\";else return date.replaceAll('/', '.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(OutterWrapper, {\n    isOwnMessage: currentUsername === name,\n    children: /*#__PURE__*/_jsxDEV(SingleMessageWrapper, {\n      isOwnMessage: currentUsername === name,\n      children: [/*#__PURE__*/_jsxDEV(StyledUsername, {\n        isOwnMessage: currentUsername === name,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StyledText, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StyledTimestamp, {\n        isOwnMessage: currentUsername === name,\n        children: formatDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SingleMessage;\nexport default SingleMessage;\nconst OutterWrapper = styled.div`\ndisplay: block;\ntext-align: ${props => props.isOwnMessage ? \"right\" : \"left\"};\n`;\n_c2 = OutterWrapper;\nconst SingleMessageWrapper = styled.div`\ndisplay: inline-block;\nborder-radius: 10px;\npadding: 10px;\nmax-width: 75%;\nmargin-bottom: 10px;\nbackground: ${props => props.isOwnMessage ? \"var(--petrol-light)\" : \"var(--light-grey)\"};\ncolor: ${props => props.isOwnMessage ? \"var(--light-grey)\" : \"var(--petrol-light)\"};\n`;\n_c3 = SingleMessageWrapper;\nconst StyledUsername = styled.div`\nfont-size: 15px;\nfont-weight: 750;\nmargin-bottom: 5px;\ndisplay: ${props => props.isOwnMessage ? \"none\" : \"\"};\n`;\n_c4 = StyledUsername;\nconst StyledText = styled.div`\nfont-size: var(--p-size);\noverflow-wrap: break-word;\nwhite-space: pre-wrap;\ntext-align: left;\n`;\n_c5 = StyledText;\nconst StyledTimestamp = styled.div`\nfont-size: var(--p-small-size);\nmargin-top: 5px;\ntext-align: ${props => props.isOwnMessage ? \"right\" : \"left\"} ;\ncolor: ${props => props.isOwnMessage ? \"var(--light-grey)\" : \"var(--light-petrol)\"} ;\n`;\n_c6 = StyledTimestamp;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SingleMessage\");\n$RefreshReg$(_c2, \"OutterWrapper\");\n$RefreshReg$(_c3, \"SingleMessageWrapper\");\n$RefreshReg$(_c4, \"StyledUsername\");\n$RefreshReg$(_c5, \"StyledText\");\n$RefreshReg$(_c6, \"StyledTimestamp\");","map":{"version":3,"sources":["/Users/odorizzialex/Desktop/Projects/coding/web/Chat_Room_Projects/thechatroom/src/components/Chat/SingleMessage.jsx"],"names":["React","styled","SingleMessage","currentUsername","name","message","timestamp","formatDate","tmstmp","split","date","time","isToday","newTimestamp","today","Date","dateList","yesterday","valueOf","toLocaleString","console","log","parseInt","getDate","getMonth","getFullYear","replaceAll","OutterWrapper","div","props","isOwnMessage","SingleMessageWrapper","StyledUsername","StyledText","StyledTimestamp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst SingleMessage = ({currentUsername, name, message, timestamp}) => {\n\n    const formatDate = () => {\n        let tmstmp = timestamp.split(',');\n        let date = tmstmp[0];\n        let time = tmstmp[1].split(':');\n\n        // console.log(isToday(date));\n        date = isToday(date);\n        let newTimestamp = date+\" \"+time[0]+':'+time[1];\n        return newTimestamp;\n    }\n\n    const isToday = (date) => {\n        const today = new Date();\n        let dateList = date.split('/');\n        let yesterday = new Date((new Date()).valueOf() - 1000*60*60*24).toLocaleString().split(',')[0]\n        console.log(yesterday.split(',')[0]);\n        console.log(date===yesterday);\n        console.log(parseInt(dateList[0]) === today.getDate() && parseInt(dateList[1]) === (today.getMonth()+1) && parseInt(dateList[2]) === today.getFullYear());\n        if(parseInt(dateList[0]) === today.getDate() && parseInt(dateList[1]) === (today.getMonth()+1) && parseInt(dateList[2]) === today.getFullYear())\n            return \"today\";\n                \n                // regular yesterday\n        else if(\n            //(parseInt(dateList[0]) === today.getDate()+1 && parseInt(dateList[1]) === (today.getMonth()+1) && parseInt(dateList[2]) === today.getFullYear())\n                // yesterday on month break\n            // || (parseInt(dateList[0]) === 31 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear()) \n            // || (parseInt(dateList[0]) === 30 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear()) \n            // || (parseInt(dateList[0]) === 29 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear()) \n            // || (parseInt(dateList[0]) === 28 && today.getDate() === 1 && parseInt(dateList[1]) === today.getMonth() && parseInt(dateList[2]) === today.getFullYear())\n            date === yesterday\n                // yesterday on new year\n            || (parseInt(dateList[0]) === 31 && today.getDate() === 1 && parseInt(dateList[1]) === 12 && (today.getMonth()+1) === 1 && parseInt(dateList[2]) === (today.getFullYear()-1)))\n            return \"yesterday\";\n        else return date.replaceAll('/', '.');\n    }\n\n    return (\n        <OutterWrapper isOwnMessage={currentUsername === name}>\n                <SingleMessageWrapper isOwnMessage={currentUsername === name}>\n                    <StyledUsername isOwnMessage={currentUsername === name}>{name}</StyledUsername>\n                    <StyledText>{message}</StyledText>\n                    <StyledTimestamp isOwnMessage={currentUsername === name}>{formatDate()}</StyledTimestamp>\n                </SingleMessageWrapper>\n        </OutterWrapper>\n    )\n};\n\nexport default SingleMessage;\n\nconst OutterWrapper = styled.div`\ndisplay: block;\ntext-align: ${(props) => props.isOwnMessage ? \"right\" : \"left\"};\n`\n\nconst SingleMessageWrapper = styled.div`\ndisplay: inline-block;\nborder-radius: 10px;\npadding: 10px;\nmax-width: 75%;\nmargin-bottom: 10px;\nbackground: ${(props) => props.isOwnMessage ? \"var(--petrol-light)\" : \"var(--light-grey)\"};\ncolor: ${(props) => props.isOwnMessage ? \"var(--light-grey)\" : \"var(--petrol-light)\"};\n`\n\nconst StyledUsername = styled.div`\nfont-size: 15px;\nfont-weight: 750;\nmargin-bottom: 5px;\ndisplay: ${(props) => props.isOwnMessage ? \"none\" : \"\"};\n`\n\nconst StyledText = styled.div`\nfont-size: var(--p-size);\noverflow-wrap: break-word;\nwhite-space: pre-wrap;\ntext-align: left;\n`\n\nconst StyledTimestamp = styled.div`\nfont-size: var(--p-small-size);\nmargin-top: 5px;\ntext-align: ${(props) => props.isOwnMessage ? \"right\" : \"left\"} ;\ncolor: ${(props) => props.isOwnMessage ? \"var(--light-grey)\" : \"var(--light-petrol)\"} ;\n`"]},"metadata":{},"sourceType":"module"}