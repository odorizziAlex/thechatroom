{"ast":null,"code":"var _jsxFileName = \"/Users/odorizzialex/Desktop/Projects/coding/web/Chat_Room_Projects/thechatroom/src/components/Chat/MainChat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport sendIconGrey from \"../../assets/send_light-grey.svg\";\nimport saveIconGrey from \"../../assets/save_light-grey.svg\";\nimport downIconGrey from \"../../assets/chevron-down_light-grey.svg\";\nimport infoIconLightPetrol from \"../../assets/info_light-petrol.svg\";\nimport SingleMessage from './SingleMessage';\nimport io from 'socket.io-client';\n/**\n * TODO\n * stack messages from bottom up !discarted!\n * make message input box multiline !check!\n *\n * username input maximum letters, !!no space!! linebreak when too narrow!! !check!\n * hide own username !check!\n * add timestamps !check!\n * user created/ connected alert\n * present user list\n * save history and save users + pw\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainChat = () => {\n  _s();\n\n  const [messageState, setMessageState] = useState({\n    name: \"\",\n    message: \"\",\n    timestamp: \"\"\n  });\n  const [headerName, setHeaderName] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [isUserNamePopupVisible, setIsUsernamePopupVisible] = useState(true);\n  const [userHasScrolled, setUserHasScrolled] = useState(false);\n  const [isNewMessageReceived, setIsNewMessageReceived] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const socketRef = useRef();\n  const messageListRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:5000\");\n    socketRef.current.on('message', ({\n      name,\n      message,\n      timestamp\n    }) => {\n      // console.log(\"messageState: \",messageState);\n      // console.log(\"chat: \",chat);\n      setChat([...chat, {\n        name,\n        message,\n        timestamp\n      }]);\n      scrollHandler();\n    });\n    socketRef.current.on('userConnected', name => {\n      setAlertMessage(name + \" has joined the chat!\");\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n        setAlertMessage(\"\");\n      }, 2000);\n    }); // socketRef.current.on('userDisconnected', () => {\n    //     console.log(\"user disconnected\");\n    // })\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [chat]);\n  useEffect(() => {\n    let msgListRef = messageListRef.current;\n    msgListRef.addEventListener(\"scroll\", checkScrollDistance);\n    return () => {\n      msgListRef.removeEventListener(\"scroll\", checkScrollDistance);\n    };\n  }, [userHasScrolled, isNewMessageReceived]);\n\n  const scrollHandler = () => {\n    if (!userHasScrolled) {\n      scrollToNewestMessage();\n    } else if (userHasScrolled) {\n      setIsNewMessageReceived(true);\n    }\n  };\n\n  const scrollToNewestMessage = () => {\n    if (isNewMessageReceived) setIsNewMessageReceived(false);\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  };\n\n  const checkScrollDistance = () => {\n    /**\n     * .scrollHeight is the overall height of the div, that can be accessed by scrolling\n     * .offsetHeight is the height of the displayed portion of a scrollable div\n     * .scrollTop gets or sets the number of pixels that an element's content is scrolled vertically\n     */\n    let scrollDistance = messageListRef.current.scrollHeight - (messageListRef.current.scrollTop + messageListRef.current.offsetHeight);\n    let messageListElHeight = messageListRef.current.offsetHeight;\n    if (scrollDistance > messageListElHeight / 4) setUserHasScrolled(true);else {\n      setUserHasScrolled(false);\n      setIsNewMessageReceived(false);\n    }\n  };\n\n  const onUsernameSubmit = event => {\n    event.preventDefault();\n    const name = event.target.name.value;\n\n    if (messageState.name !== \"\") {\n      socketRef.current.emit('userConnected', name);\n      setMessageState({ ...messageState,\n        [event.target.name]: event.target.value\n      });\n      setIsUsernamePopupVisible(false);\n      setHeaderName(messageState.name);\n    }\n  };\n\n  const onMessageSubmit = event => {\n    const {\n      name,\n      message,\n      timestamp\n    } = messageState;\n    event.preventDefault();\n\n    if (messageState.message !== \"\") {\n      socketRef.current.emit('message', {\n        name,\n        message,\n        timestamp\n      });\n      setMessageState({\n        message: \"\",\n        name,\n        timestamp: \"\"\n      });\n      scrollToNewestMessage();\n    }\n  };\n\n  const onTextInputChange = event => {\n    if (event.target.name === \"name\") {\n      let username = event.target.value;\n      username = username.replace(/\\s/g, '');\n      setMessageState({ ...messageState,\n        [event.target.name]: username\n      });\n    } else {\n      setMessageState({ ...messageState,\n        [event.target.name]: event.target.value,\n        timestamp: new Date().toLocaleString()\n      });\n    }\n  };\n  /**\n   * This handler is required to use enter as a submit option while using a\n   *  textarea instead of a standard input in a form.\n   */\n\n\n  const onEnterPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      onMessageSubmit(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledArea, {\n    children: [isUserNamePopupVisible && /*#__PURE__*/_jsxDEV(Overlay, {\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(PopupDescription, {\n          children: \"Insert your Username!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n          onSubmit: onUsernameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n            name: \"name\",\n            onChange: onTextInputChange,\n            value: messageState.name,\n            placeholder: \"Username...\",\n            autoComplete: \"off\",\n            maxLength: \"25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledFormSubmitButton, {\n            text: messageState.name,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveIconGrey,\n              alt: \"save icon from feathericons.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          children: headerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessagesOutterWrapper, {\n        ref: messageListRef,\n        children: /*#__PURE__*/_jsxDEV(Messages, {\n          children: chat.map(({\n            name,\n            message,\n            timestamp\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(SingleMessage, {\n              currentUsername: messageState.name,\n              name: name,\n              message: message,\n              timestamp: timestamp\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BottomAreaWrapper, {\n        children: [showAlert && /*#__PURE__*/_jsxDEV(StyledAlert, {\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {\n            src: infoIconLightPetrol,\n            alt: \"info icon from feathericons.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertMessage, {\n            children: alertMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(ScrollButtonWrapper, {\n          children: [isNewMessageReceived && userHasScrolled && /*#__PURE__*/_jsxDEV(NewMessageIndicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), userHasScrolled && /*#__PURE__*/_jsxDEV(StyledScrollButton, {\n            onClick: () => scrollToNewestMessage(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: downIconGrey,\n              alt: \"chevron down from feathericons.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n          onSubmit: onMessageSubmit,\n          children: [/*#__PURE__*/_jsxDEV(StyledTextArea, {\n            name: \"message\",\n            onChange: onTextInputChange,\n            value: messageState.message,\n            placeholder: \"Message...\",\n            autoComplete: \"off\",\n            onKeyDown: onEnterPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledFormSubmitButton, {\n            text: messageState.message,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendIconGrey,\n              alt: \"send icon from feathericons.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainChat, \"ITPXkO9ebi9tH4IYDQiwPQ+XA1c=\");\n\n_c = MainChat;\nexport default MainChat;\nconst StyledArea = styled.div`\nposition: fixed;\npadding: 20px;\nbackground: var(--app-background);\nheight: 100%;\nwidth:100%;\n`;\n_c2 = StyledArea;\nconst Overlay = styled.div`\nbackground: var(--trans-black);\nposition: fixed;\nwidth: 100%;\nheight: 100%;\nbackdrop-filter: blur(5px);\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nz-index: 2;\n`;\n_c3 = Overlay;\nconst Popup = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground: var(--white);\nborder-radius: 10px;\n`;\n_c4 = Popup;\nconst PopupDescription = styled.div`\ntext-align:center;\npadding-top: 10px;\npadding-bottom: 10px;\n\n`;\n_c5 = PopupDescription;\nconst ChatArea = styled.div`\nposition: absolute;\ntop:50%;\nleft:50%;\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: column;\nbackground: var(--white);\nborder-radius: 10px;\nwidth: 99%;\nheight: 98%;\n`;\n_c6 = ChatArea;\nconst HeaderWrapper = styled.div`\npadding: 10px;\nborder-bottom: 1px solid var(--light-grey);\n`;\n_c7 = HeaderWrapper;\nconst Header = styled.div`\nwidth: 100%;\nbackground: var(--light-grey);\nborder-radius: 10px;\npadding: 15px;\ncolor: var(--petrol);\nfont-weight: 700;\ntext-align: right;\n`;\n_c8 = Header;\nconst MessagesOutterWrapper = styled.div`\noverflow-y: auto;\npadding: 10px 10px 0px 10px;\nheight: 100%;\nwidth: 100%;\n`;\n_c9 = MessagesOutterWrapper;\nconst Messages = styled.div`\n`;\n_c10 = Messages;\nconst BottomAreaWrapper = styled.div`\n`;\n_c11 = BottomAreaWrapper;\nconst StyledAlert = styled.div`\nposition: absolute;\ndisplay: flex;\njustify-content: center;\nwidth: 50%;\nmargin-left: 25%;\nmargin-top: -36px;\npadding: 3px;\ntext-align: center;\n// display: none;\ncolor: var(--light-petrol);\nbackground: var(--light-grey);\nfont-size: var(--p-size);\nborder-radius: 15px;\n`;\n_c12 = StyledAlert;\nconst AlertIcon = styled.img`\nwidth: 20px;\n`;\n_c13 = AlertIcon;\nconst AlertMessage = styled.div`\nmargin-left: 10px;\nmargin-top: 1.5px;\n`;\n_c14 = AlertMessage;\nconst ScrollButtonWrapper = styled.div`\nposition: absolute;\nmargin-left: 10px;\nmargin-top: -40px;\n`;\n_c15 = ScrollButtonWrapper;\nconst NewMessageIndicator = styled.div`\nposition: absolute;\npointer-events: none;\nwidth: 13px;\nheight: 13px;\nmargin-left: 22px;\nmargin-top: -3px;\nborder-radius: 6px;\nbackground: var(--warning);\n`;\n_c16 = NewMessageIndicator;\nconst StyledScrollButton = styled.div`\ndisplay: inline-block;\nborder: 0;\npadding: 4px 4px 0px 4px;\nbackground: var(--light-petrol);\nborder-radius: 10px;\ncursor: pointer;\n\n&:hover {\n    background: var(--petrol);\n}\n`;\n_c17 = StyledScrollButton;\nconst InputForm = styled.form`\ndisplay: flex;\nwidth: 100%;\npadding: 10px;\nmargin-top: auto;\nborder-top: 1px solid var(--light-grey);\n`;\n_c18 = InputForm;\nconst StyledTextArea = styled.textarea`\nborder-radius: 10px;\noverflow-y: auto;\nborder: 0;\nbackground: var(--light-grey);\npadding: 20px;\nwidth: 100%;\nmax-height: 55px;\nfont: 13px Arial;\nresize: none;\n\n&:focus {\n    outline: none;\n}\n`;\n_c19 = StyledTextArea;\nconst StyledInput = styled.input`\nborder-radius: 10px;\nborder: 0;\nbackground: var(--light-grey);\npadding: 20px;\nwidth: 100%;\n\n&:focus {\n    outline: none;\n}\n`;\n_c20 = StyledInput;\nconst StyledFormSubmitButton = styled.button`\nborder: 0;\npadding: 4px 16px 0px 15px;\nmargin-left: 5px;\nbackground: ${props => props.text !== \"\" ? \"var(--light-petrol)\" : \"var(--dark-grey)\"};\nborder-radius: 10px;\ncursor: pointer;\ncursor: ${props => props.text !== \"\" ? \"pointer\" : \"default\"};\npointer-events: ${props => props.text !== \"\" ? \"\" : \"none\"};   \n\n&:hover {\n    background: ${props => props.text !== \"\" ? \"var(--petrol)\" : \"\"};\n}\n`;\n_c21 = StyledFormSubmitButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n\n$RefreshReg$(_c, \"MainChat\");\n$RefreshReg$(_c2, \"StyledArea\");\n$RefreshReg$(_c3, \"Overlay\");\n$RefreshReg$(_c4, \"Popup\");\n$RefreshReg$(_c5, \"PopupDescription\");\n$RefreshReg$(_c6, \"ChatArea\");\n$RefreshReg$(_c7, \"HeaderWrapper\");\n$RefreshReg$(_c8, \"Header\");\n$RefreshReg$(_c9, \"MessagesOutterWrapper\");\n$RefreshReg$(_c10, \"Messages\");\n$RefreshReg$(_c11, \"BottomAreaWrapper\");\n$RefreshReg$(_c12, \"StyledAlert\");\n$RefreshReg$(_c13, \"AlertIcon\");\n$RefreshReg$(_c14, \"AlertMessage\");\n$RefreshReg$(_c15, \"ScrollButtonWrapper\");\n$RefreshReg$(_c16, \"NewMessageIndicator\");\n$RefreshReg$(_c17, \"StyledScrollButton\");\n$RefreshReg$(_c18, \"InputForm\");\n$RefreshReg$(_c19, \"StyledTextArea\");\n$RefreshReg$(_c20, \"StyledInput\");\n$RefreshReg$(_c21, \"StyledFormSubmitButton\");","map":{"version":3,"sources":["/Users/odorizzialex/Desktop/Projects/coding/web/Chat_Room_Projects/thechatroom/src/components/Chat/MainChat.jsx"],"names":["React","useState","useEffect","useRef","styled","SingleMessage","io","MainChat","messageState","setMessageState","name","message","timestamp","headerName","setHeaderName","chat","setChat","isUserNamePopupVisible","setIsUsernamePopupVisible","userHasScrolled","setUserHasScrolled","isNewMessageReceived","setIsNewMessageReceived","showAlert","setShowAlert","alertMessage","setAlertMessage","socketRef","messageListRef","current","connect","on","scrollHandler","setTimeout","disconnect","msgListRef","addEventListener","checkScrollDistance","removeEventListener","scrollToNewestMessage","scrollTop","scrollHeight","scrollDistance","offsetHeight","messageListElHeight","onUsernameSubmit","event","preventDefault","target","value","emit","onMessageSubmit","onTextInputChange","username","replace","Date","toLocaleString","onEnterPress","key","shiftKey","saveIconGrey","map","index","infoIconLightPetrol","downIconGrey","sendIconGrey","StyledArea","div","Overlay","Popup","PopupDescription","ChatArea","HeaderWrapper","Header","MessagesOutterWrapper","Messages","BottomAreaWrapper","StyledAlert","AlertIcon","img","AlertMessage","ScrollButtonWrapper","NewMessageIndicator","StyledScrollButton","InputForm","form","StyledTextArea","textarea","StyledInput","input","StyledFormSubmitButton","button","props","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport sendIconGrey from '../../assets/send_light-grey.svg'\nimport saveIconGrey from '../../assets/save_light-grey.svg'\nimport downIconGrey from '../../assets/chevron-down_light-grey.svg'\nimport infoIconLightPetrol from '../../assets/info_light-petrol.svg'\nimport SingleMessage from './SingleMessage'\nimport io from 'socket.io-client'\n\n/**\n * TODO\n * stack messages from bottom up !discarted!\n * make message input box multiline !check!\n *\n * username input maximum letters, !!no space!! linebreak when too narrow!! !check!\n * hide own username !check!\n * add timestamps !check!\n * user created/ connected alert\n * present user list\n * save history and save users + pw\n */\n\nconst MainChat = () => {\n    const [messageState, setMessageState] = useState({ name: \"\", message: \"\", timestamp: \"\" });\n    const [headerName, setHeaderName] = useState(\"\");\n    const [chat, setChat] = useState([]);\n\n    const [isUserNamePopupVisible, setIsUsernamePopupVisible] = useState(true);\n    const [userHasScrolled, setUserHasScrolled] = useState(false);\n    const [isNewMessageReceived, setIsNewMessageReceived] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n\n    const socketRef = useRef();\n    const messageListRef = useRef();\n\n\n    useEffect(() => {\n        socketRef.current = io.connect(\"http://localhost:5000\")\n        socketRef.current.on('message', ({ name, message, timestamp }) => {\n            // console.log(\"messageState: \",messageState);\n            // console.log(\"chat: \",chat);\n            setChat([...chat, { name, message, timestamp }])\n            scrollHandler();\n        });\n\n        socketRef.current.on('userConnected', (name) => {\n            setAlertMessage(name+\" has joined the chat!\");\n            setShowAlert(true);\n            setTimeout(() => {\n                setShowAlert(false);\n                setAlertMessage(\"\");\n            },2000);\n        });\n\n        // socketRef.current.on('userDisconnected', () => {\n        //     console.log(\"user disconnected\");\n        // })\n        return () => {\n            socketRef.current.disconnect();\n        }\n    },[chat])\n\n    useEffect(() => {\n        let msgListRef = messageListRef.current;\n        msgListRef.addEventListener(\"scroll\", checkScrollDistance);\n\n        return () => {\n            msgListRef.removeEventListener(\"scroll\", checkScrollDistance);\n        }\n    }, [userHasScrolled, isNewMessageReceived])\n\n    const scrollHandler = () => {\n        if (!userHasScrolled) {\n            scrollToNewestMessage();\n        } else if (userHasScrolled) {\n            setIsNewMessageReceived(true);\n        }\n    }\n\n    const scrollToNewestMessage = () => {\n        if (isNewMessageReceived) setIsNewMessageReceived(false);\n        messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n\n    const checkScrollDistance = () => {\n        /**\n         * .scrollHeight is the overall height of the div, that can be accessed by scrolling\n         * .offsetHeight is the height of the displayed portion of a scrollable div\n         * .scrollTop gets or sets the number of pixels that an element's content is scrolled vertically\n         */\n        let scrollDistance = messageListRef.current.scrollHeight - (messageListRef.current.scrollTop + messageListRef.current.offsetHeight);\n        let messageListElHeight = messageListRef.current.offsetHeight;\n        if (scrollDistance > (messageListElHeight / 4))\n            setUserHasScrolled(true)\n        else {\n            setUserHasScrolled(false);\n            setIsNewMessageReceived(false);\n        }\n    }\n\n    const onUsernameSubmit = (event) => {\n        event.preventDefault();\n        const name = event.target.name.value;\n        if (messageState.name !== \"\") {\n            socketRef.current.emit('userConnected', name);\n            setMessageState({ ...messageState, [event.target.name]: event.target.value });\n            setIsUsernamePopupVisible(false);\n            setHeaderName(messageState.name);\n        }\n    }\n\n    const onMessageSubmit = (event) => {\n        const { name, message, timestamp } = messageState;\n        event.preventDefault();\n        if (messageState.message !== \"\") {\n            socketRef.current.emit('message', { name, message, timestamp });\n            setMessageState({ message: \"\", name, timestamp: \"\" });\n            scrollToNewestMessage();\n        }\n    }\n\n    const onTextInputChange = (event) => {\n        if (event.target.name === \"name\") {\n            let username = event.target.value;\n            username = username.replace(/\\s/g, '');\n            setMessageState({ ...messageState, [event.target.name]: username });\n        } else {\n            setMessageState({ ...messageState, [event.target.name]: event.target.value, timestamp: new Date().toLocaleString() });\n        }\n    }\n\n    /**\n     * This handler is required to use enter as a submit option while using a\n     *  textarea instead of a standard input in a form.\n     */\n    const onEnterPress = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            onMessageSubmit(event);\n        }\n    }\n\n    return (\n        <StyledArea>\n            {isUserNamePopupVisible && <Overlay>\n                <Popup>\n                    <PopupDescription>\n                        Insert your Username!\n                    </PopupDescription>\n                    <InputForm onSubmit={onUsernameSubmit}>\n                        <StyledInput\n                            name=\"name\"\n                            onChange={onTextInputChange}\n                            value={messageState.name}\n                            placeholder=\"Username...\"\n                            autoComplete=\"off\"\n                            maxLength=\"25\"\n                        />\n                        <StyledFormSubmitButton text={messageState.name}>\n                            <img src={saveIconGrey} alt=\"save icon from feathericons.com\" />\n                        </StyledFormSubmitButton>\n                    </InputForm>\n                </Popup>\n            </Overlay>}\n            <ChatArea>\n                <HeaderWrapper>\n                    <Header>\n                        {headerName}\n                    </Header>\n                </HeaderWrapper>\n                <MessagesOutterWrapper ref={messageListRef}>\n                    <Messages>\n                        {chat.map(({ name, message, timestamp }, index) => {\n                            return (\n                                <SingleMessage\n                                    key={index}\n                                    currentUsername={messageState.name}\n                                    name={name}\n                                    message={message}\n                                    timestamp={timestamp}\n                                />\n                            );\n                        })}\n                    </Messages>\n                </MessagesOutterWrapper>\n                <BottomAreaWrapper>\n                    {showAlert && <StyledAlert>\n                        <AlertIcon src={infoIconLightPetrol} alt=\"info icon from feathericons.com\" />\n                        <AlertMessage>{alertMessage}</AlertMessage>\n                    </StyledAlert>}\n                    <ScrollButtonWrapper>\n                        {isNewMessageReceived && userHasScrolled &&\n                            <NewMessageIndicator />}\n                        {userHasScrolled &&\n                            <StyledScrollButton onClick={() => scrollToNewestMessage()}>\n                                <img src={downIconGrey} alt=\"chevron down from feathericons.com\" />\n                            </StyledScrollButton>}\n                    </ScrollButtonWrapper>\n                    <InputForm\n                        onSubmit={onMessageSubmit}\n                    >\n                        <StyledTextArea\n                            name=\"message\"\n                            onChange={onTextInputChange}\n                            value={messageState.message}\n                            placeholder=\"Message...\"\n                            autoComplete=\"off\"\n                            onKeyDown={onEnterPress}\n                        />\n                        <StyledFormSubmitButton text={messageState.message}>\n                            <img src={sendIconGrey} alt=\"send icon from feathericons.com\" />\n                        </StyledFormSubmitButton>\n                    </InputForm>\n                </BottomAreaWrapper>\n            </ChatArea>\n        </StyledArea>\n    );\n}\n\nexport default MainChat;\n\nconst StyledArea = styled.div`\nposition: fixed;\npadding: 20px;\nbackground: var(--app-background);\nheight: 100%;\nwidth:100%;\n`;\n\nconst Overlay = styled.div`\nbackground: var(--trans-black);\nposition: fixed;\nwidth: 100%;\nheight: 100%;\nbackdrop-filter: blur(5px);\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\nz-index: 2;\n`\n\nconst Popup = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground: var(--white);\nborder-radius: 10px;\n`\n\nconst PopupDescription = styled.div`\ntext-align:center;\npadding-top: 10px;\npadding-bottom: 10px;\n\n`\nconst ChatArea = styled.div`\nposition: absolute;\ntop:50%;\nleft:50%;\ntransform: translate(-50%, -50%);\ndisplay: flex;\nflex-direction: column;\nbackground: var(--white);\nborder-radius: 10px;\nwidth: 99%;\nheight: 98%;\n`;\n\nconst HeaderWrapper = styled.div`\npadding: 10px;\nborder-bottom: 1px solid var(--light-grey);\n`\n\nconst Header = styled.div`\nwidth: 100%;\nbackground: var(--light-grey);\nborder-radius: 10px;\npadding: 15px;\ncolor: var(--petrol);\nfont-weight: 700;\ntext-align: right;\n`\n\nconst MessagesOutterWrapper = styled.div`\noverflow-y: auto;\npadding: 10px 10px 0px 10px;\nheight: 100%;\nwidth: 100%;\n`\n\nconst Messages = styled.div`\n`\n\nconst BottomAreaWrapper = styled.div`\n`\n\nconst StyledAlert = styled.div`\nposition: absolute;\ndisplay: flex;\njustify-content: center;\nwidth: 50%;\nmargin-left: 25%;\nmargin-top: -36px;\npadding: 3px;\ntext-align: center;\n// display: none;\ncolor: var(--light-petrol);\nbackground: var(--light-grey);\nfont-size: var(--p-size);\nborder-radius: 15px;\n`\n\nconst AlertIcon = styled.img`\nwidth: 20px;\n`\n\nconst AlertMessage = styled.div`\nmargin-left: 10px;\nmargin-top: 1.5px;\n`\n\nconst ScrollButtonWrapper = styled.div`\nposition: absolute;\nmargin-left: 10px;\nmargin-top: -40px;\n`\n\nconst NewMessageIndicator = styled.div`\nposition: absolute;\npointer-events: none;\nwidth: 13px;\nheight: 13px;\nmargin-left: 22px;\nmargin-top: -3px;\nborder-radius: 6px;\nbackground: var(--warning);\n`\n\nconst StyledScrollButton = styled.div`\ndisplay: inline-block;\nborder: 0;\npadding: 4px 4px 0px 4px;\nbackground: var(--light-petrol);\nborder-radius: 10px;\ncursor: pointer;\n\n&:hover {\n    background: var(--petrol);\n}\n`\n\nconst InputForm = styled.form`\ndisplay: flex;\nwidth: 100%;\npadding: 10px;\nmargin-top: auto;\nborder-top: 1px solid var(--light-grey);\n`\n\nconst StyledTextArea = styled.textarea`\nborder-radius: 10px;\noverflow-y: auto;\nborder: 0;\nbackground: var(--light-grey);\npadding: 20px;\nwidth: 100%;\nmax-height: 55px;\nfont: 13px Arial;\nresize: none;\n\n&:focus {\n    outline: none;\n}\n`\n\nconst StyledInput = styled.input`\nborder-radius: 10px;\nborder: 0;\nbackground: var(--light-grey);\npadding: 20px;\nwidth: 100%;\n\n&:focus {\n    outline: none;\n}\n`\n\nconst StyledFormSubmitButton = styled.button`\nborder: 0;\npadding: 4px 16px 0px 15px;\nmargin-left: 5px;\nbackground: ${(props) => props.text !== \"\" ? \"var(--light-petrol)\" : \"var(--dark-grey)\"};\nborder-radius: 10px;\ncursor: pointer;\ncursor: ${(props) => props.text !== \"\" ? \"pointer\" : \"default\"};\npointer-events: ${(props) => props.text !== \"\" ? \"\" : \"none\"};   \n\n&:hover {\n    background: ${(props) => props.text !== \"\" ? \"var(--petrol)\" : \"\"};\n}\n`\n"]},"metadata":{},"sourceType":"module"}